@using Entities.Concrete
@model Dictionary<Team, int>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}

<section class="main-content-w3layouts-agileits">
    <div class="container">
        <h3 class="tittle">Teams</h3>
        <div class="inner-sec">
            <!--left-->
            <div class="left-blog-info-w3layouts-agileits text-left">
                <div class="row">
                    @foreach (var item in Model)
                    {

                        <div class="col-lg-4 card" style="margin-bottom: 25px;">
                            <a href="javascript:void(0)" onclick="navigateToTeam(@item.Key.TeamId)">
                                <img style="width: 100%; height: 200px !important"  src="@item.Key.TeamImage" class="card-img-top" alt="">
                            </a>
                            <div class="card-body">
                                <ul class="blog-icons my-4">
                                    <li>
                                        <a href="#">
                                            <i class="far fa-calendar-alt"></i> @item.Key.TeamCreatedDate.ToString("dd MMMM yyyy")
                                        </a>
                                    </li>
                                    <li class="mx-2">
                                        <a href="#">
                                            <i class="far fa-user"></i> @item.Value <!--takımdaki kisi sayisi-->
                                        </a>
                                    </li>
                                    <li>
                                        <a href="#">
                                            <i class="fas fa-eye"></i> 2000
                                        </a>
                                    </li>

                                </ul>
                                <h5 class="card-title">
                                    <a href="javascript:void(0)" onclick="navigateToTeam(@item.Key.TeamId)">@item.Key.TeamName</a>
                                </h5>
                                <p class="card-text mb-3">
                                    @if (item.Key.TeamDescription.Length <= 50)
                                    {
                                        @item.Key.TeamDescription
                                    }
                                    else
                                    {
                                        @item.Key.TeamDescription.Substring(0, item.Key.TeamDescription.Substring(0, 50).LastIndexOf(" "))
                                    }
                                    ...
                                </p>
                                
                                    @if (ViewBag.UserTeamIds.Contains(item.Key.TeamId))
                                    {
                                        <p style="pointer-events: none" class="btn btn-warning">Joined</p>
                                    }
                                    else
                                    {
                                        <a href="single.html" class="btn btn-primary read-m">Join</a>
                                    }

                            </div>
                        </div>
                        
                    }

                    <script>
                        let joinErr = document.querySelector("#joinTeamError")
                        function navigateToTeam(teamId) {
                            var userTeamIds = @Html.Raw(Json.Serialize(ViewBag.UserTeamIds));

                            if (userTeamIds.includes(teamId)) {
                                location.href = '/Team/TeamDetails/' + teamId;
                            } else {
                                swal("Error", "To see team content, you must first be a member of the team.")
                            }
                        }
                    </script>
                </div>
                <!--//left-->
            </div>
        </div>
    </div>
</section>
